@page "/auth"

@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@using System.Text
@using System.Text.Json
@using Chat.Models
@using Chat.Requests
@using Chat.Services
@inject CustomStateProvider authStateProvider
@inject NavigationManager navigationManager

<PageTitle>Index</PageTitle>

<div className="wrapper">
    <div className="container">
        <h1>Chack chat</h1>

        <EditForm Model="@authUser" OnSubmit="Register" className="form">
            <input @bind-value="@authUser.UserName" type="text" placeholder="Username"/>
            <input @bind-value="@authUser.Password" type="password" placeholder="Password"/>
            <button type="submit" id="login-button">Регистрация</button>
        </EditForm>
        <p>@message</p>
    </div>
</div>


@code {
    RegisterRequest authUser = new();
    string message = "";

    async Task Register()
    {
        authUser.PasswordConfirm = authUser.Password;
        authUser.Email = "AAAAAAA@mail.ru";
        message = "Выполняется проверка...";
        /*HttpClient httpClient = ClientFactory.CreateClient();
        var serializeUser = JsonSerializer.Serialize(authUser);
        var requestContent = new StringContent(serializeUser, Encoding.UTF8, "application/json");
        var response = await httpClient.PostAsync("http://localhost:5174/auth/register", requestContent);
        if(response.IsSuccessStatusCode)
            NavigationManager.NavigateTo("/");
        else
            message = await response.Content.ReadAsStringAsync();*/
        try
        {
            await authStateProvider.Register(authUser);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            message = ex.Message;
        }
    }

}